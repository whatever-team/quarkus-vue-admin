<template>
  <a-drawer
      :title="title"
      :width="720"
      :visible="visible"
      :body-style="{ paddingBottom: '80px' }"
      @close="onClose"
  >
    <div>
      <a-form-model ref="editForm" :model="form" :rules="rules" :label-col="labelCol" :wrapper-col="wrapperCol">
        <#list fields as field>
          <a-form-model-item label="${field.name}" prop="${field.name}">
            <a-input v-model="form.${field.name}" />
          </a-form-model-item>
        </#list>
      </a-form-model>
      <div class="drawer-form-button-group">
        <a-button :style="{ marginRight: '8px' }" @click="onClose">
          取消
        </a-button>
        <a-button type="primary" @click="onSubmit" :loading="submitLoading">
          提交
        </a-button>
      </div>
    </div>
  </a-drawer>
</template>

<script>
import {update, add} from '@/services/${lowerHyphenEntityName}'
export default {
  name: "Edit",
  data() {
    return {
      title: '新增${lowerHyphenEntityName}',
      visible: false,
      isAdd: false,
      submitLoading: false,
      treeData: [],
      form: {
        <#list fields as field>
          ${field.name}: null,
        </#list>
      },
      formDefault: {},
      rules: {
        <#list fields as field>
          ${field.name}: [
            { required: true, message: '请输入${field.name}', trigger: 'blur' },
          ],
        </#list>
      },
      labelCol: { span: 4 },
      wrapperCol: { span: 14 },
    };
  },
  mounted() {
    this.formDefault = JSON.parse(JSON.stringify(this.form))
  },
  methods: {
    add() {
      this.title = '新增${lowerHyphenEntityName}'
      this.form = Object.assign({}, this.formDefault);
      this.isAdd = true
      this.show()
    },
    update(data) {
      this.title = '编辑${lowerHyphenEntityName}'
      this.isAdd = false
      this.form = Object.assign({}, data);
      this.show()
    },
    show() {
      this.visible = true;
    },
    onClose() {
      this.visible = false;
    },
    onSubmit() {
      this.$refs.editForm.validate(async valid => {
        if (valid) {
          this.submitLoading = true
          let response
          if (this.isAdd) {
            response = await add(this.form)
          } else {
            response = await update(this.form)
          }
          this.submitLoading = false

          if (response.data.code === 'SUCCESS') {
            this.$emit('change', this.form)
            this.onClose()
          } else {
            this.$message.error(response.data.message)
          }
        } else {
          return false;
        }
      });
    },
  }
}
</script>

<style scoped>

</style>
